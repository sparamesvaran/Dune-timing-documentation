{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Dune Timing Documentation \u00b6 Welcome to the Dune timing documentation page, please click one of the tabs at the top of the page to find the information you are looking for.","title":"Home"},{"location":"#dune-timing-documentation","text":"Welcome to the Dune timing documentation page, please click one of the tabs at the top of the page to find the information you are looking for.","title":"Dune Timing Documentation"},{"location":"Setting-up-the-FMC/","text":"To enable testing and commissioning of the timing system, a timing FPGA mezzanine card(FMC) was designed and fabricated. The FMC has SFP, Ethernet, and U.FL connectors, and can act as either as a timing master or endpoint, depending on the firmware uploaded onto the carrier board FPGA. The following instructions will allow you to set up and control the timing FMC. Pre-requisites: \u00b6 Hardware: \u00b6 Timing FMC hosted on an Enclustra Mars PM3 base board with an Enclustra Mars AX3 FPGA module JTAG cable Linux machine (for control and firmware uploads) running CentOS xxx Software: \u00b6 The ProtoDUNE timing butler (pdtbutler) is a python-based command line tool which provides the functionality to control the timing FMC. The pdt-butler has the following software dependencies: boost libraries (v1.53), python 2.7, and the uhal package (installation instructions can be found from https://ipbus.web.cern.ch/ipbus/doc/user/html/software/installation.html). Installation instructions for the ProtoDUNE timing software \u00b6 To set up the pdtbutler, please execute the following steps on the control machine. Clone the software repository, (ssh key access to gitlab required) git clone https : // github . com / DUNE - DAQ / timing - board - software . git Checkout FMC set-up tag git checkout relval / v6 . 0.0 / b2 Compile the C++ layer make Source the environment source tests / env . sh Firmware \u00b6 The timing firmware repisitory is located here: https://pdts-fw.web.cern.ch/pdts-fw Download the firmware bit file for the FMC which will allow the FMC to behave as a master timing unit wget ouroboros_pc053d_fmc_relval-v5-3-0-b2_sha-ac158d6a_runner-slu9p8x4-project-19909-concurrent-0_210301_1409.tgz Untar the directory and there will be a list of files including ouroboros_pc053d_fmc.bit. Using Vivado or an alternative method, connect to the JTAG chain and program the FPGA with this firmware bit file. Configuring the FMC \u00b6 Reset the FMC: pdtbutler io PRIMARY reset Info Created device PRIMARY Design 'ouroboros' on board 'fmc' on carrier 'enclustra-a35' Resetting PRIMARY 2021-03-09 16:16:56.276 pdt NOTICE | PLL configuration file : Si5394-RevA-94mst625-Registers.txt 2021-03-09 16:16:56.280 pdt NOTICE | Configuring PLL : SI5394 2021-03-09 16:16:59.105 pdt NOTICE | PLL configuration id : 94mst625 -----------Hardware info---------- +----------------+---------------+ | Board type | fmc | | Board revision | kFMCRev3 | | Board UID | 0x49162b67ce6 | | Carrier type | enclustra-a35 | | Design type | ouroboros | +----------------+---------------+ ------FMC IO state----- +-------------+-------+ | Register | Value | +-------------+-------+ | cdr_lol | 0x1 | | cdr_los | 0x1 | | mmcm_ok | 0x1 | | mmcm_sticky | 0x0 | | sfp_flt | 0x1 | | sfp_los | 0x1 | +-------------+-------+ PLL Clock frequency measurement: PLL freq: 312.490080593 CDR freq: 36.4953250256 PLL configuration id : 94mst625 -------PLL information------ +-----------------+--------+ | Register | Value | +-----------------+--------+ | Device grade | 0x0 | | Device revision | 0x0 | | Part number | 0x5394 | +-----------------+--------+ ----------PLL state---------- +-------------------+-------+ | Register | Value | +-------------------+-------+ | CAL_PLL | 0x0 | | HOLD | 0x1 | | LOL | 0x1 | | LOS | 0x0 | | LOSXAXB | 0x0 | | LOSXAXB_FLG | 0x1 | | OOF | 0x0 | | OOF (sticky) | 0xf | | SMBUS_TIMEOUT | 0x0 | | SMBUS_TIMEOUT_FLG | 0x0 | | SYSINCAL | 0x0 | | SYSINCAL_FLG | 0x1 | | XAXB_ERR | 0x0 | | XAXB_ERR_FLG | 0x1 | +-------------------+-------+ Set the time of the FMC master block: pdtbutler mst PRIMARY synctime Configure timing partition 0 pdtbutler mst PRIMARY part 0 configure Check status of timing partition 0 pdtbutler mst PRIMARY part 0 status","title":"Setting up the FMC"},{"location":"Setting-up-the-FMC/#pre-requisites","text":"","title":"Pre-requisites:"},{"location":"Setting-up-the-FMC/#hardware","text":"Timing FMC hosted on an Enclustra Mars PM3 base board with an Enclustra Mars AX3 FPGA module JTAG cable Linux machine (for control and firmware uploads) running CentOS xxx","title":"Hardware:"},{"location":"Setting-up-the-FMC/#software","text":"The ProtoDUNE timing butler (pdtbutler) is a python-based command line tool which provides the functionality to control the timing FMC. The pdt-butler has the following software dependencies: boost libraries (v1.53), python 2.7, and the uhal package (installation instructions can be found from https://ipbus.web.cern.ch/ipbus/doc/user/html/software/installation.html).","title":"Software:"},{"location":"Setting-up-the-FMC/#installation-instructions-for-the-protodune-timing-software","text":"To set up the pdtbutler, please execute the following steps on the control machine. Clone the software repository, (ssh key access to gitlab required) git clone https : // github . com / DUNE - DAQ / timing - board - software . git Checkout FMC set-up tag git checkout relval / v6 . 0.0 / b2 Compile the C++ layer make Source the environment source tests / env . sh","title":"Installation instructions for the ProtoDUNE timing software"},{"location":"Setting-up-the-FMC/#firmware","text":"The timing firmware repisitory is located here: https://pdts-fw.web.cern.ch/pdts-fw Download the firmware bit file for the FMC which will allow the FMC to behave as a master timing unit wget ouroboros_pc053d_fmc_relval-v5-3-0-b2_sha-ac158d6a_runner-slu9p8x4-project-19909-concurrent-0_210301_1409.tgz Untar the directory and there will be a list of files including ouroboros_pc053d_fmc.bit. Using Vivado or an alternative method, connect to the JTAG chain and program the FPGA with this firmware bit file.","title":"Firmware"},{"location":"Setting-up-the-FMC/#configuring-the-fmc","text":"Reset the FMC: pdtbutler io PRIMARY reset Info Created device PRIMARY Design 'ouroboros' on board 'fmc' on carrier 'enclustra-a35' Resetting PRIMARY 2021-03-09 16:16:56.276 pdt NOTICE | PLL configuration file : Si5394-RevA-94mst625-Registers.txt 2021-03-09 16:16:56.280 pdt NOTICE | Configuring PLL : SI5394 2021-03-09 16:16:59.105 pdt NOTICE | PLL configuration id : 94mst625 -----------Hardware info---------- +----------------+---------------+ | Board type | fmc | | Board revision | kFMCRev3 | | Board UID | 0x49162b67ce6 | | Carrier type | enclustra-a35 | | Design type | ouroboros | +----------------+---------------+ ------FMC IO state----- +-------------+-------+ | Register | Value | +-------------+-------+ | cdr_lol | 0x1 | | cdr_los | 0x1 | | mmcm_ok | 0x1 | | mmcm_sticky | 0x0 | | sfp_flt | 0x1 | | sfp_los | 0x1 | +-------------+-------+ PLL Clock frequency measurement: PLL freq: 312.490080593 CDR freq: 36.4953250256 PLL configuration id : 94mst625 -------PLL information------ +-----------------+--------+ | Register | Value | +-----------------+--------+ | Device grade | 0x0 | | Device revision | 0x0 | | Part number | 0x5394 | +-----------------+--------+ ----------PLL state---------- +-------------------+-------+ | Register | Value | +-------------------+-------+ | CAL_PLL | 0x0 | | HOLD | 0x1 | | LOL | 0x1 | | LOS | 0x0 | | LOSXAXB | 0x0 | | LOSXAXB_FLG | 0x1 | | OOF | 0x0 | | OOF (sticky) | 0xf | | SMBUS_TIMEOUT | 0x0 | | SMBUS_TIMEOUT_FLG | 0x0 | | SYSINCAL | 0x0 | | SYSINCAL_FLG | 0x1 | | XAXB_ERR | 0x0 | | XAXB_ERR_FLG | 0x1 | +-------------------+-------+ Set the time of the FMC master block: pdtbutler mst PRIMARY synctime Configure timing partition 0 pdtbutler mst PRIMARY part 0 configure Check status of timing partition 0 pdtbutler mst PRIMARY part 0 status","title":"Configuring the FMC"},{"location":"TimingBoardSoftware/","text":"Test","title":"TimingBoardSoftware"}]}